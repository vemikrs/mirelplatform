# This file contains the full E2E test jobs that are currently disabled due to network restrictions
# To enable these jobs:
# 1. Configure network access in repository settings (add api.foojay.io and esm.ubuntu.com to allowlist)
# 2. Rename this file to remove the .disabled extension
# 3. Merge into the main e2e-tests.yml file

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Install E2E test dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci --legacy-peer-deps --no-audit
      - name: Build backend
        run: ./gradlew :backend:build -x test
      - name: Start services for E2E tests
        run: |
          cd backend
          SPRING_PROFILES_ACTIVE=dev SERVER_PORT=3000 ./gradlew bootRun &
          BACKEND_PID=$!
          echo "BACKEND_PID=$BACKEND_PID" >> $GITHUB_ENV
          cd ../frontend
          HOST=0.0.0.0 PORT=8080 NODE_OPTIONS="--no-deprecation" npm run dev &
          FRONTEND_PID=$!
          echo "FRONTEND_PID=$FRONTEND_PID" >> $GITHUB_ENV
          timeout 120 bash -c 'until curl -s http://localhost:3000/actuator/health; do sleep 2; done'
          timeout 120 bash -c 'until curl -s http://localhost:8080/mirel/; do sleep 2; done'
      - name: Run E2E tests
        run: npx playwright test --project=${{ matrix.browser }}
        env:
          CI: true
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-results-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/
          retention-days: 7
      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-screenshots-${{ matrix.browser }}
          path: test-results/screenshots/
          retention-days: 7
      - name: Stop services
        if: always()
        run: |
          if [ ! -z "$BACKEND_PID" ]; then
            kill $BACKEND_PID || true
          fi
          if [ ! -z "$FRONTEND_PID" ]; then
            kill $FRONTEND_PID || true
          fi
          pkill -f "gradlew.*bootRun" || true
          pkill -f "npm run dev" || true
          pkill -f "nuxt" || true

  accessibility-audit:
    name: Accessibility Audit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci --legacy-peer-deps --no-audit
      - name: Build backend
        run: ./gradlew :backend:build -x test
      - name: Start services
        run: |
          cd backend
          SPRING_PROFILES_ACTIVE=dev SERVER_PORT=3000 ./gradlew bootRun &
          cd ../frontend
          HOST=0.0.0.0 PORT=8080 NODE_OPTIONS="--no-deprecation" npm run dev &
          timeout 120 bash -c 'until curl -s http://localhost:3000/actuator/health; do sleep 2; done'
          timeout 120 bash -c 'until curl -s http://localhost:8080/mirel/; do sleep 2; done'
      - name: Run accessibility tests
        run: npx playwright test --project=chromium --grep="accessibility"
      - name: Upload accessibility results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: accessibility-audit-results
          path: |
            test-results/
            playwright-report/
