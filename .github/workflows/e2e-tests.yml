name: E2E Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

env:
  # Japanese locale and timezone settings
  TZ: Asia/Tokyo
  LANG: ja_JP.UTF-8
  LC_ALL: ja_JP.UTF-8

jobs:
  validate-setup:
    name: Validate E2E Test Setup
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install E2E test dependencies
        run: npm ci

      - name: Validate E2E setup
        run: npm run test:e2e:validate

      - name: Check Playwright configuration
        run: ./node_modules/.bin/playwright test --list

      - name: Upload validation results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: validation-results
          path: |
            test-results/
          retention-days: 7

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: validate-setup
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Install E2E test dependencies
        run: npm ci
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci --legacy-peer-deps --no-audit
      
      - name: Build backend
        run: ./gradlew :backend:build -x test
      
      - name: Start backend service
        run: |
          cd backend
          SPRING_PROFILES_ACTIVE=dev SERVER_PORT=3000 ./gradlew bootRun &
          BACKEND_PID=$!
          echo "BACKEND_PID=$BACKEND_PID" >> $GITHUB_ENV
          echo "Backend started with PID: $BACKEND_PID"
      
      - name: Start frontend service
        run: |
          cd frontend
          HOST=0.0.0.0 PORT=8080 NODE_OPTIONS="--no-deprecation" npm run dev &
          FRONTEND_PID=$!
          echo "FRONTEND_PID=$FRONTEND_PID" >> $GITHUB_ENV
          echo "Frontend started with PID: $FRONTEND_PID"
      
      - name: Wait for services to be ready
        run: |
          echo "Waiting for backend to be ready..."
          timeout 120 bash -c 'until curl -sf http://localhost:3000/actuator/health; do echo "Waiting for backend..."; sleep 2; done' || {
            echo "Backend failed to start"
            cat backend.log 2>/dev/null || echo "No backend log available"
            exit 1
          }
          echo "Backend is ready"
          
          echo "Waiting for frontend to be ready..."
          timeout 120 bash -c 'until curl -sf http://localhost:8080/mirel/; do echo "Waiting for frontend..."; sleep 2; done' || {
            echo "Frontend failed to start"
            cat frontend.log 2>/dev/null || echo "No frontend log available"
            exit 1
          }
          echo "Frontend is ready"
      
      - name: Run E2E tests
        run: npx playwright test --project=${{ matrix.browser }}
        env:
          CI: true
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-results-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/
          retention-days: 7
      
      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-screenshots-${{ matrix.browser }}
          path: test-results/screenshots/
          retention-days: 7
      
      - name: Stop services
        if: always()
        run: |
          echo "Stopping services..."
          if [ ! -z "$BACKEND_PID" ]; then
            kill $BACKEND_PID 2>/dev/null || true
          fi
          if [ ! -z "$FRONTEND_PID" ]; then
            kill $FRONTEND_PID 2>/dev/null || true
          fi
          pkill -f "gradlew.*bootRun" || true
          pkill -f "npm run dev" || true
          pkill -f "nuxt" || true
          echo "Services stopped"

  accessibility-audit:
    name: Accessibility Audit
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: validate-setup
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
      
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci --legacy-peer-deps --no-audit
      
      - name: Build backend
        run: ./gradlew :backend:build -x test
      
      - name: Start services
        run: |
          cd backend
          SPRING_PROFILES_ACTIVE=dev SERVER_PORT=3000 ./gradlew bootRun &
          cd ../frontend
          HOST=0.0.0.0 PORT=8080 NODE_OPTIONS="--no-deprecation" npm run dev &
          
          echo "Waiting for services..."
          timeout 120 bash -c 'until curl -sf http://localhost:3000/actuator/health; do sleep 2; done'
          timeout 120 bash -c 'until curl -sf http://localhost:8080/mirel/; do sleep 2; done'
          echo "Services ready"
      
      - name: Run accessibility tests
        run: npx playwright test --project=chromium --grep="accessibility"
      
      - name: Upload accessibility results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: accessibility-audit-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7
